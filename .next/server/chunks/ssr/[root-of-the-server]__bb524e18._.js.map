{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/emson-silva/Documentos/my-projects/agroGestao/organic-shop/src/app/login/page.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { Leaf, ArrowLeft } from \"lucide-react\"\n\nexport default function Login() {\n  const router = useRouter()\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    userType: \"customer\",\n  })\n  const [error, setError] = useState(\"\")\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target\n    setFormData((prev) => ({ ...prev, [name]: value }))\n  }\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    setError(\"\")\n\n    // Simulação de login - em uma aplicação real, isso seria feito com uma API\n    if (formData.email && formData.password) {\n      // Verificar se o usuário existe no localStorage\n      const users = JSON.parse(localStorage.getItem(\"users\") || \"[]\")\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const user = users.find((u: any) => u.email === formData.email && u.type === formData.userType)\n\n      if (user && user.password === formData.password) {\n        // Login bem-sucedido\n        localStorage.setItem(\"currentUser\", JSON.stringify(user))\n\n        // Redirecionar com base no tipo de usuário\n        if (formData.userType === \"manager\") {\n          // Adicionar um pequeno atraso para garantir que o localStorage seja atualizado\n          setTimeout(() => {\n            router.push(\"/manager/dashboard\")\n          }, 100)\n        } else {\n          router.push(\"/customer/dashboard\")\n        }\n      } else {\n        setError(\"Email ou senha incorretos\")\n      }\n    } else {\n      setError(\"Por favor, preencha todos os campos\")\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-green-50 to-white flex flex-col\">\n      <header className=\"container mx-auto py-6 px-4\">\n        <Link href=\"/\" className=\"flex items-center gap-2 text-green-800 hover:text-green-600 transition-colors\">\n          <ArrowLeft className=\"h-5 w-5\" />\n          <span>Voltar para a página inicial</span>\n        </Link>\n      </header>\n\n      <main className=\"flex-1 flex items-center justify-center px-4\">\n        <div className=\"bg-white rounded-lg shadow-lg p-8 max-w-md w-full\">\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"flex items-center gap-2\">\n              <Leaf className=\"h-8 w-8 text-green-600\" />\n              <h1 className=\"text-2xl font-bold text-green-800\">Verde Vivo</h1>\n            </div>\n          </div>\n\n          <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-6\">Entrar no sistema</h2>\n\n          {error && <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">{error}</div>}\n\n          <form onSubmit={handleSubmit}>\n            <div className=\"mb-4\">\n              <label htmlFor=\"userType\" className=\"block text-gray-700 font-medium mb-2\">\n                Tipo de usuário\n              </label>\n              <select\n                id=\"userType\"\n                name=\"userType\"\n                value={formData.userType}\n                onChange={handleChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n              >\n                <option value=\"customer\">Cliente</option>\n                <option value=\"manager\">Gerente</option>\n              </select>\n            </div>\n\n            <div className=\"mb-4\">\n              <label htmlFor=\"email\" className=\"block text-gray-700 font-medium mb-2\">\n                Email\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n                placeholder=\"seu@email.com\"\n              />\n            </div>\n\n            <div className=\"mb-6\">\n              <label htmlFor=\"password\" className=\"block text-gray-700 font-medium mb-2\">\n                Senha\n              </label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n                placeholder=\"********\"\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 transition-colors focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\n            >\n              Entrar\n            </button>\n          </form>\n\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-gray-600\">\n              Não tem uma conta?{\" \"}\n              <Link href=\"/register\" className=\"text-green-600 hover:text-green-700\">\n                Cadastre-se\n              </Link>\n            </p>\n          </div>\n        </div>\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}