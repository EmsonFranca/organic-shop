{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/emson-silva/Documentos/my-projects/agroGestao/organic-shop/src/app/customer/dashboard/page.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Leaf, User, ShoppingBag, LogOut, ShoppingCart } from \"lucide-react\"\nimport Image from \"next/image\"\nexport default function CustomerDashboard() {\n  const router = useRouter()\n  const [activeTab, setActiveTab] = useState(\"products\")\n  const [products, setProducts] = useState<any[]>([])\n  const [cart, setCart] = useState<any[]>([])\n  const [orders, setOrders] = useState<any[]>([])\n  const [currentUser, setCurrentUser] = useState<any>(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    try {\n      // Verificar se o usuário está logado e é um cliente\n      const userStr = localStorage.getItem(\"currentUser\")\n      if (!userStr) {\n        console.log(\"Usuário não encontrado, redirecionando para login\")\n        router.push(\"/login\")\n        return\n      }\n\n      const user = JSON.parse(userStr)\n      console.log(\"Usuário carregado:\", user)\n\n      if (user.type !== \"customer\") {\n        console.log(\"Usuário não é cliente, redirecionando para login\")\n        router.push(\"/login\")\n        return\n      }\n\n      setCurrentUser(user)\n\n      // Inicializar dados se não existirem\n      if (!localStorage.getItem(\"products\")) {\n        localStorage.setItem(\"products\", JSON.stringify([]))\n      }\n\n      if (!localStorage.getItem(\"orders\")) {\n        localStorage.setItem(\"orders\", JSON.stringify([]))\n      }\n\n      // Carregar dados do localStorage\n      const storedProducts = JSON.parse(localStorage.getItem(\"products\") || \"[]\")\n      const storedOrders = JSON.parse(localStorage.getItem(\"orders\") || \"[]\")\n\n      // Filtrar apenas os pedidos do cliente atual\n      const userOrders = storedOrders.filter((order: any) => order.customerId === user.id)\n\n      // Verificar se existe um carrinho para o usuário\n      const userCart = JSON.parse(localStorage.getItem(`cart_${user.id}`) || \"[]\")\n\n      setProducts(storedProducts)\n      setOrders(userOrders)\n      setCart(userCart)\n      setIsLoading(false)\n    } catch (error) {\n      console.error(\"Erro ao processar dados do usuário:\", error)\n      router.push(\"/login\")\n    }\n  }, [router])\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"currentUser\")\n    router.push(\"/login\")\n  }\n\n  const addToCart = (product: any) => {\n    try {\n      // Verificar se o produto já está no carrinho\n      const existingItem = cart.find((item) => item.productId === product.id)\n\n      let updatedCart\n      if (existingItem) {\n        // Atualizar quantidade\n        updatedCart = cart.map((item) =>\n          item.productId === product.id ? { ...item, quantity: item.quantity + 1 } : item,\n        )\n      } else {\n        // Adicionar novo item\n        updatedCart = [\n          ...cart,\n          {\n            productId: product.id,\n            name: product.name,\n            price: product.price,\n            quantity: 1,\n            image: product.image,\n          },\n        ]\n      }\n\n      setCart(updatedCart)\n      localStorage.setItem(`cart_${currentUser.id}`, JSON.stringify(updatedCart))\n\n      alert(`${product.name} adicionado ao carrinho!`)\n    } catch (error) {\n      console.error(\"Erro ao adicionar ao carrinho:\", error)\n      alert(\"Erro ao adicionar produto ao carrinho. Tente novamente.\")\n    }\n  }\n\n  const removeFromCart = (productId: string) => {\n    try {\n      const updatedCart = cart.filter((item) => item.productId !== productId)\n      setCart(updatedCart)\n      localStorage.setItem(`cart_${currentUser.id}`, JSON.stringify(updatedCart))\n    } catch (error) {\n      console.error(\"Erro ao remover do carrinho:\", error)\n      alert(\"Erro ao remover produto do carrinho. Tente novamente.\")\n    }\n  }\n\n  const updateCartItemQuantity = (productId: string, newQuantity: number) => {\n    try {\n      if (newQuantity < 1) return\n\n      const updatedCart = cart.map((item) => (item.productId === productId ? { ...item, quantity: newQuantity } : item))\n\n      setCart(updatedCart)\n      localStorage.setItem(`cart_${currentUser.id}`, JSON.stringify(updatedCart))\n    } catch (error) {\n      console.error(\"Erro ao atualizar quantidade:\", error)\n      alert(\"Erro ao atualizar quantidade. Tente novamente.\")\n    }\n  }\n\n  const checkout = () => {\n    try {\n      if (!cart || cart.length === 0) {\n        alert(\"Seu carrinho está vazio!\")\n        return\n      }\n\n      if (!currentUser || !currentUser.id) {\n        alert(\"Erro: Informações do usuário não disponíveis. Faça login novamente.\")\n        router.push(\"/login\")\n        return\n      }\n\n      // Calcular total\n      const total = cart.reduce((sum, item) => sum + (item.price || 0) * (item.quantity || 0), 0)\n\n      // Criar novo pedido\n      const newOrder = {\n        id: Date.now().toString(),\n        customerId: currentUser.id,\n        customerName: currentUser.name || \"Cliente\",\n        items: cart.map((item) => ({\n          productId: item.productId,\n          name: item.name || \"Produto\",\n          price: item.price || 0,\n          quantity: item.quantity || 0,\n          image: item.image || \"/placeholder.svg\",\n        })),\n        total: total,\n        status: \"pending\",\n        createdAt: new Date().toISOString(),\n      }\n\n      // Atualizar pedidos no localStorage\n      const allOrders = JSON.parse(localStorage.getItem(\"orders\") || \"[]\")\n      const updatedOrders = [...allOrders, newOrder]\n      localStorage.setItem(\"orders\", JSON.stringify(updatedOrders))\n\n      // Atualizar pedidos do cliente\n      setOrders([...orders, newOrder])\n\n      // Limpar carrinho\n      setCart([])\n      localStorage.setItem(`cart_${currentUser.id}`, JSON.stringify([]))\n\n      // Atualizar estoque dos produtos\n      const updatedProducts = products.map((product) => {\n        const cartItem = cart.find((item) => item.productId === product.id)\n        if (cartItem) {\n          return {\n            ...product,\n            stock: Math.max(0, product.stock - (cartItem.quantity || 0)),\n          }\n        }\n        return product\n      })\n\n      setProducts(updatedProducts)\n      localStorage.setItem(\"products\", JSON.stringify(updatedProducts))\n\n      alert(\"Pedido realizado com sucesso!\")\n      setActiveTab(\"orders\")\n    } catch (error) {\n      console.error(\"Erro ao finalizar pedido:\", error)\n      alert(\"Erro ao finalizar pedido. Tente novamente.\")\n    }\n  }\n\n  const calculateCartTotal = () => {\n    try {\n      return cart.reduce((total, item) => total + item.price * item.quantity, 0)\n    } catch (error) {\n      console.error(\"Erro ao calcular total:\", error)\n      return 0\n    }\n  }\n\n  // Mostrar mensagem de carregamento enquanto os dados estão sendo carregados\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-lg text-gray-600\">Carregando...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* Sidebar */}\n      <aside className=\"w-64 bg-green-800 text-white min-h-screen\">\n        <div className=\"p-4 flex items-center gap-2\">\n          <Leaf className=\"h-6 w-6\" />\n          <h1 className=\"text-xl font-bold\">Verde Vivo</h1>\n        </div>\n\n        <div className=\"mt-8\">\n          <button\n            onClick={() => setActiveTab(\"products\")}\n            className={`w-full flex items-center gap-3 px-4 py-3 ${\n              activeTab === \"products\" ? \"bg-green-700\" : \"hover:bg-green-700\"\n            }`}\n          >\n            <ShoppingBag className=\"h-5 w-5\" />\n            <span>Produtos</span>\n          </button>\n\n          <button\n            onClick={() => setActiveTab(\"cart\")}\n            className={`w-full flex items-center gap-3 px-4 py-3 ${\n              activeTab === \"cart\" ? \"bg-green-700\" : \"hover:bg-green-700\"\n            }`}\n          >\n            <ShoppingCart className=\"h-5 w-5\" />\n            <span>Carrinho {cart.length > 0 && `(${cart.length})`}</span>\n          </button>\n\n          <button\n            onClick={() => setActiveTab(\"orders\")}\n            className={`w-full flex items-center gap-3 px-4 py-3 ${\n              activeTab === \"orders\" ? \"bg-green-700\" : \"hover:bg-green-700\"\n            }`}\n          >\n            <ShoppingBag className=\"h-5 w-5\" />\n            <span>Meus Pedidos</span>\n          </button>\n\n          <button\n            onClick={() => setActiveTab(\"profile\")}\n            className={`w-full flex items-center gap-3 px-4 py-3 ${\n              activeTab === \"profile\" ? \"bg-green-700\" : \"hover:bg-green-700\"\n            }`}\n          >\n            <User className=\"h-5 w-5\" />\n            <span>Meu Perfil</span>\n          </button>\n        </div>\n\n        <div className=\"mt-auto p-4 border-t border-green-700\">\n          {currentUser && (\n            <div className=\"mb-4\">\n              <p className=\"text-sm text-green-300\">Logado como:</p>\n              <p className=\"font-medium\">{currentUser.name}</p>\n            </div>\n          )}\n\n          <button onClick={handleLogout} className=\"flex items-center gap-2 text-green-300 hover:text-white\">\n            <LogOut className=\"h-4 w-4\" />\n            <span>Sair</span>\n          </button>\n        </div>\n      </aside>\n\n      {/* Main content */}\n      <main className=\"flex-1 p-8\">\n        {/* Products Tab */}\n        {activeTab === \"products\" && (\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Produtos Disponíveis</h2>\n\n            {products.length === 0 ? (\n              <div className=\"bg-white p-6 rounded-lg shadow text-center\">\n                <p className=\"text-gray-500\">Nenhum produto disponível no momento.</p>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n                {products.map((product) => (\n                  <div key={product.id} className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n                    \n                    \n                    <Image\n                      src={product.image || \"/placeholder.svg\"}\n                      alt={product.name}\n                      width={1920}\n                      height={1080}\n                      className=\"w-full h-48 object-cover\"\n                    />\n                    <div className=\"p-4\">\n                      <h3 className=\"text-lg font-semibold mb-1 text-green-800\">{product.name}</h3>\n                      <p className=\"text-gray-600 text-sm mb-2\">{product.category || \"Orgânico\"}</p>\n                      {product.description && (\n                        <p className=\"text-gray-600 text-sm mb-3 line-clamp-2\">{product.description}</p>\n                      )}\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-green-700 font-bold\">R$ {product.price.toFixed(2)}</span>\n                        <button\n                          onClick={() => addToCart(product)}\n                          disabled={product.stock <= 0}\n                          className={`text-sm px-3 py-1 rounded ${\n                            product.stock > 0\n                              ? \"bg-green-600 text-white hover:bg-green-700\"\n                              : \"bg-gray-300 text-gray-500 cursor-not-allowed\"\n                          } transition-colors`}\n                        >\n                          {product.stock > 0 ? \"Adicionar\" : \"Esgotado\"}\n                        </button>\n                      </div>\n                      {product.stock > 0 && <p className=\"text-sm text-gray-500 mt-1\">Estoque: {product.stock}</p>}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Cart Tab */}\n        {activeTab === \"cart\" && (\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Meu Carrinho</h2>\n\n            {cart.length === 0 ? (\n              <div className=\"bg-white p-6 rounded-lg shadow text-center\">\n                <p className=\"text-gray-500\">Seu carrinho está vazio.</p>\n                <button\n                  onClick={() => setActiveTab(\"products\")}\n                  className=\"mt-4 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\n                >\n                  Ver produtos\n                </button>\n              </div>\n            ) : (\n              <div>\n                <div className=\"bg-white rounded-lg shadow-md overflow-hidden mb-6\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Produto\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Preço\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Quantidade\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Subtotal\n                        </th>\n                        <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Ações\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {cart.map((item) => (\n                        <tr key={item.productId}>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <div className=\"h-10 w-10 flex-shrink-0\">\n                                <Image\n                                  className=\"h-10 w-10 rounded-full object-cover\"\n                                  src={item.image || \"/placeholder.svg\"}\n                                  alt={item.name}\n                                  width={40}\n                                  height={40}\n                                />\n                              </div>\n                              <div className=\"ml-4\">\n                                <div className=\"text-sm font-medium text-gray-900\">{item.name}</div>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm text-gray-900\">R$ {item.price.toFixed(2)}</div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <button\n                                onClick={() => updateCartItemQuantity(item.productId, item.quantity - 1)}\n                                className=\"px-2 py-1 border border-gray-300 rounded-l-md\"\n                              >\n                                -\n                              </button>\n                              <span className=\"px-4 py-1 border-t border-b border-gray-300\">{item.quantity}</span>\n                              <button\n                                onClick={() => updateCartItemQuantity(item.productId, item.quantity + 1)}\n                                className=\"px-2 py-1 border border-gray-300 rounded-r-md\"\n                              >\n                                +\n                              </button>\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm text-gray-900\">R$ {(item.price * item.quantity).toFixed(2)}</div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button\n                              onClick={() => removeFromCart(item.productId)}\n                              className=\"text-red-600 hover:text-red-900\"\n                            >\n                              Remover\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n\n                <div className=\"bg-white rounded-lg shadow-md p-6\">\n                  <div className=\"flex justify-between items-center mb-4\">\n                    <span className=\"text-lg font-semibold\">Total:</span>\n                    <span className=\"text-xl font-bold text-green-700\">R$ {calculateCartTotal().toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-end\">\n                    <button\n                      onClick={checkout}\n                      className=\"px-6 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\n                    >\n                      Finalizar Pedido\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Orders Tab */}\n        {activeTab === \"orders\" && (\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Meus Pedidos</h2>\n\n            {orders.length === 0 ? (\n              <div className=\"bg-white p-6 rounded-lg shadow text-center\">\n                <p className=\"text-gray-500\">Você ainda não fez nenhum pedido.</p>\n                <button\n                  onClick={() => setActiveTab(\"products\")}\n                  className=\"mt-4 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\n                >\n                  Ver produtos\n                </button>\n              </div>\n            ) : (\n              <div className=\"space-y-6\">\n                {orders.map((order) => (\n                  <div key={order.id} className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n                    <div className=\"bg-green-50 px-6 py-4 border-b border-gray-200\">\n                      <div className=\"flex justify-between items-center\">\n                        <div>\n                          <h3 className=\"text-lg font-semibold\">Pedido #{order.id ? order.id.slice(-6) : \"N/A\"}</h3>\n                          <p className=\"text-sm text-gray-500\">\n                            {order.createdAt\n                              ? new Date(order.createdAt).toLocaleDateString(\"pt-BR\", {\n                                  day: \"2-digit\",\n                                  month: \"2-digit\",\n                                  year: \"numeric\",\n                                  hour: \"2-digit\",\n                                  minute: \"2-digit\",\n                                })\n                              : \"Data não disponível\"}\n                          </p>\n                        </div>\n                        <div>\n                          <span\n                            className={`px-3 py-1 rounded-full text-sm font-medium ${\n                              order.status === \"completed\"\n                                ? \"bg-green-100 text-green-800\"\n                                : order.status === \"processing\"\n                                  ? \"bg-yellow-100 text-yellow-800\"\n                                  : \"bg-gray-100 text-gray-800\"\n                            }`}\n                          >\n                            {order.status === \"completed\"\n                              ? \"Concluído\"\n                              : order.status === \"processing\"\n                                ? \"Em processamento\"\n                                : \"Pendente\"}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"px-6 py-4\">\n                      <h4 className=\"text-sm font-medium text-gray-500 mb-2\">Itens do pedido</h4>\n                      {order.items && Array.isArray(order.items) ? (\n                        <ul className=\"divide-y divide-gray-200\">\n                          {order.items.map((item: any, index: number) => (\n                            <li key={item.productId || index} className=\"py-3 flex justify-between\">\n                              <div className=\"flex items-center\">\n                                <Image\n                                  src={item.image || \"/placeholder.svg\"}\n                                  alt={item.name || \"Produto\"}\n                                  width={40}\n                                  height={40}\n                                  className=\"h-10 w-10 rounded-full object-cover mr-3\"\n                                />\n                                <div>\n                                  <p className=\"text-sm font-medium text-gray-900\">{item.name || \"Produto sem nome\"}</p>\n                                  <p className=\"text-sm text-gray-500\">\n                                    {item.quantity || 0} x R$ {(item.price || 0).toFixed(2)}\n                                  </p>\n                                </div>\n                              </div>\n                              <p className=\"text-sm font-medium text-gray-900\">\n                                R$ {((item.price || 0) * (item.quantity || 0)).toFixed(2)}\n                              </p>\n                            </li>\n                          ))}\n                        </ul>\n                      ) : (\n                        <p className=\"text-sm text-gray-500\">Informações dos itens não disponíveis</p>\n                      )}\n                    </div>\n                    <div className=\"bg-gray-50 px-6 py-4 border-t border-gray-200\">\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm font-medium text-gray-500\">Total</span>\n                        <span className=\"text-lg font-bold text-green-700\">R$ {(order.total || 0).toFixed(2)}</span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Profile Tab */}\n        {activeTab === \"profile\" && (\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Meu Perfil</h2>\n\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              {currentUser && (\n                <div>\n                  <div className=\"mb-6\">\n                    <h3 className=\"text-lg font-semibold mb-4\">Informações Pessoais</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <p className=\"text-sm text-gray-500\">Nome</p>\n                        <p className=\"font-medium\">{currentUser.name}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-500\">Email</p>\n                        <p className=\"font-medium\">{currentUser.email}</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h3 className=\"text-lg font-semibold mb-4\">Resumo da Conta</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <div className=\"bg-green-50 p-4 rounded-lg\">\n                        <p className=\"text-sm text-gray-500 mb-1\">Total de Pedidos</p>\n                        <p className=\"text-2xl font-bold text-green-700\">{orders.length}</p>\n                      </div>\n                      <div className=\"bg-green-50 p-4 rounded-lg\">\n                        <p className=\"text-sm text-gray-500 mb-1\">Itens no Carrinho</p>\n                        <p className=\"text-2xl font-bold text-green-700\">{cart.length}</p>\n                      </div>\n                      <div className=\"bg-green-50 p-4 rounded-lg\">\n                        <p className=\"text-sm text-gray-500 mb-1\">Data de Cadastro</p>\n                        <p className=\"text-sm font-medium text-green-700\">\n                          {new Date(currentUser.createdAt).toLocaleDateString(\"pt-BR\")}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}